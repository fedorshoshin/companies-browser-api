name: Organizations
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/organizations
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        List all organizations

        Returns a list of all organizations with their houses, phones, and occupations.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Parker Inc",
              "house_id": 3,
              "phones": [{"number":"123-456"},{"number":"789-012"}],
              "occupations": [{"name":"Food"},{"name":"Beverages"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/organizations/search/by-occupation-name
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Search organizations by occupation name

        Returns organizations linked to an occupation name and its children.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        custom: []
        name: q
        description: 'The occupation name to search'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanQueryParameters:
      q: architecto
    bodyParameters:
      q:
        custom: []
        name: q
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      q: architecto
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Parker Inc",
              "house_id": 3,
              "phones": [{"number":"123-456"}],
              "occupations": [{"name":"Food"},{"name":"Dairy"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/organizations/search/by-name
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search organizations by name'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        custom: []
        name: q
        description: 'The search term for organization name'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanQueryParameters:
      q: architecto
    bodyParameters:
      q:
        custom: []
        name: q
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      q: architecto
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Parker Inc",
              "house_id": 3,
              "phones": [{"number":"123-456"}],
              "occupations": [{"name":"Food"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/organizations/by-location
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Search organizations by geographic location

        Returns organizations within a given radius from a point.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      lat:
        custom: []
        name: lat
        description: 'Latitude of center point'
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      lng:
        custom: []
        name: lng
        description: 'Longitude of center point'
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      radius:
        custom: []
        name: radius
        description: 'Radius in kilometers'
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanQueryParameters:
      lat: 4326.41688
      lng: 4326.41688
      radius: 4326.41688
    bodyParameters:
      lat:
        custom: []
        name: lat
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      lng:
        custom: []
        name: lng
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      radius:
        custom: []
        name: radius
        description: ''
        required: true
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      lat: 4326.41688
      lng: 4326.41688
      radius: 4326.41688
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Parker Inc",
              "house_id": 3,
              "distance": 2.34,
              "phones": [{"number":"123-456"}],
              "occupations": [{"name":"Food"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/organizations/{id}'
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get organization by ID'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the organization'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Parker Inc",
            "house_id": 3,
            "phones": [{"number":"123-456"}],
            "occupations": [{"name":"Food"}],
            "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/organizations/by-house/{id}'
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List organizations in a specific house'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the house'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 2,
              "name": "Green Foods",
              "house_id": 3,
              "phones": [{"number":"555-123"}],
              "occupations": [{"name":"Food"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/organizations/by-occupation/{occupation}'
    metadata:
      custom: []
      groupName: Organizations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Search organizations by occupation ID

        Returns all organizations linked to a specific occupation.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      occupation:
        custom: []
        name: occupation
        description: 'The ID of the occupation'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      occupation: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Parker Inc",
              "house_id": 3,
              "phones": [{"number":"123-456"}],
              "occupations": [{"name":"Food"},{"name":"Dairy"}],
              "house": {"id":3,"address":"123 Main St","latitude":40.12,"longitude":44.56}
            }
          ]
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
